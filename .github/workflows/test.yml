---
name: test

on:
  push:
    branches:
      - "**"

jobs:
  # Build and test on Windows
  windows:
    runs-on: windows-2022
    steps:
      - name: Clone WSS
        uses: actions/checkout@v2

      - name: Load package caches
        uses: actions/cache@v2
        env:
          CACHE_SLUG: ${{ github.job }}-${{ matrix.name }}
        with:
          path: |
            ~\.conan\data
            ~\AppData\Local\pip\Cache
          key: ${{ env.CACHE_SLUG }}-${{ github.ref_name }}
          restore-keys: |
            ${{ env.CACHE_SLUG }}-main
            ${{ env.CACHE_SLUG }}-${{ github.ref_name }}
            ${{ env.CACHE_SLUG }}-

      - name: Initialise System
        run: .github\\workflows\\conan\\init.ps1

      - name: Perform Test
        run: .github\\workflows\\conan\\test-msvc.ps1

      - name: Check Working Directory Preservation
        run: |
          git diff --exit-code .

  # Build and test on Linux
  linux:
    strategy:
      matrix:
        name:
          [
            "vcpkg-gcc",
            "conan-clang-tidy",
            "conan-fuzzer",
            "conan-gcc",
            "conan-clang-libcpp",
            "conan-clang-libstdcpp",
            "conan-clang-static-analyzer",
            "conan-coverage-functional",
            "conan-coverage-unit",
            "conan-valgrind",
            "conan-cppcheck",
            "conan-include-what-you-use",
            "lint",
          ]
        include:
          - name: vcpkg-gcc
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/vcpkg/init
            test-script: .github/workflows/vcpkg/test-gcc
          - name: conan-clang-tidy
            container: johnmcfarlane/cnl_ci:clang-14-libcpp
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/clang-tidy
          - name: conan-fuzzer
            container: johnmcfarlane/cnl_ci:clang-14-libcpp
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/libfuzzer
          - name: conan-gcc
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/test-gcc
          - name: conan-clang-libcpp
            container: johnmcfarlane/cnl_ci:clang-14-libcpp
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/test-clang
          - name: conan-clang-libstdcpp
            container: johnmcfarlane/cnl_ci:clang-14-libstdcpp
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/test-clang
          - name: conan-clang-static-analyzer
            container: johnmcfarlane/cnl_ci:clang-14-libcpp
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/clang-static-analyzer
          - name: conan-coverage-functional
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/coverage-functional
          - name: conan-coverage-unit
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/coverage-unit
          - name: conan-valgrind
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/valgrind
          - name: conan-cppcheck
            container: johnmcfarlane/cnl_ci:gcc-12
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/cppcheck
          - name: conan-include-what-you-use
            container: johnmcfarlane/cnl_ci:clang-11
            init-script: .github/workflows/conan/init
            test-script: .github/workflows/conan/iwyu
          - name: lint
            container: johnmcfarlane/cnl_ci:clang-14
            init-script: .github/workflows/pre-commit/init
            test-script: .github/workflows/pre-commit/lint

    container: ${{matrix.container}}
    runs-on: ubuntu-20.04
    steps:
      - name: Clone WSS
        uses: actions/checkout@v2

      - name: Load package caches
        uses: actions/cache@v2
        env:
          CACHE_SLUG: ${{ github.job }}-${{ matrix.name }}
        with:
          path: |
            /github/home/.conan/data
            /github/home/.cache/pre-commit
          key: ${{ env.CACHE_SLUG }}-${{ github.ref_name }}
          restore-keys: |
            ${{ env.CACHE_SLUG }}-main
            ${{ env.CACHE_SLUG }}-${{ github.ref_name }}
            ${{ env.CACHE_SLUG }}-

      - name: Load compiler cache
        uses: hendrikmuhs/ccache-action@v1
        env:
          CACHE_SLUG: ${{ github.job }}-${{ matrix.name }}
        with:
          key: ${{ env.CACHE_SLUG }}

      - name: Report Caches
        run: |
          ccache -s

      - name: Initialise System
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          $GITHUB_WORKSPACE/${{ matrix.init-script }}

      - name: Perform Test
        run: $GITHUB_WORKSPACE/${{ matrix.test-script }}

      - name: Check Working Directory Preservation
        run: |
          cd $GITHUB_WORKSPACE
          git diff --exit-code .

      - name: Upload Clang Static Analyzer report
        uses: actions/upload-artifact@v3
        if: ${{ matrix.name == 'conan-clang-static-analyzer' && failure() }}
        with:
          name: csa-report
          path: ${{github.workspace}}/scan-build
          if-no-files-found: error

      - name: Upload functional test code coverage report
        uses: actions/upload-artifact@v3
        if: ${{ matrix.name == 'conan-coverage-functional' && always() }}
        with:
          name: coverage-functional-report
          path: ${{github.workspace}}/coverage-report
          if-no-files-found: error

      - name: Upload unit test code coverage report
        uses: actions/upload-artifact@v3
        if: ${{ matrix.name == 'conan-coverage-unit' && always() }}
        with:
          name: coverage-unit-report
          path: ${{github.workspace}}/coverage-report
          if-no-files-found: error

      - name: Upload Valgrind report
        uses: actions/upload-artifact@v3
        if: ${{ matrix.name == 'conan-valgrind' && failure() }}
        with:
          name: valgrind-logs
          path: ${{github.workspace}}/Testing/Temporary
          if-no-files-found: error

      - name: Report Caches
        run: |
          ccache -s
