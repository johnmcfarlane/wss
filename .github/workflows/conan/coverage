#!/usr/bin/env bash

set -euo pipefail

PROJECT_DIR=$(cd "$(dirname "$0")"/../../.. || exit; pwd)

conan install \
  --build=missing \
  --env CONAN_CMAKE_TOOLCHAIN_FILE="${PROJECT_DIR}/.github/workflows/toolchains/linux-gcc.cmake" \
  --settings build_type=Coverage \
  "${PROJECT_DIR}" \
  "$@"

conan build \
  --configure --build \
  "${PROJECT_DIR}"

# delete coverage numbers accumulated during build step
find . -name "*.gcda" -delete

# collect only coverage numbers from testing
conan build \
  --test \
  "${PROJECT_DIR}"

lcov \
  --capture \
  --base-directory "${PROJECT_DIR}" \
  --directory . \
  --exclude "*-test.cpp" \
  --include "${PROJECT_DIR}/*" \
  --rc lcov_branch_coverage=1 \
  --output-file coverage-info

genhtml \
  coverage-info \
  --branch-coverage \
  --output-directory coverage-report | tee coverage-log

SUCCESS=1

if ! grep "functions..: 100.0%" coverage-log
then
  echo error: missing function coverage
  SUCCESS=0
fi

if ! grep "lines......: 100.0%" coverage-log
then
  echo error: missing line coverage
  SUCCESS=0
fi

if ! grep "branches...: 100.0%" coverage-log
then
  echo error: missing branch coverage
  SUCCESS=0
fi

echo report generated in ./coverage-report/

if [[ ${SUCCESS} -eq 0 ]] ; then
  echo failure
  exit 1
else
  echo success
  exit 0
fi
