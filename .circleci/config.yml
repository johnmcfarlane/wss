version: 2

general:
  branches:
    ignore:
      - gh-pages

jobs:
  "coverage-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:base-19.10
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh lcov parallel
      - restore_cache:
          key: cache
      - run:
          name: Run coverage
          command: bash -c /root/project/scripts/coverage.sh
      - store_artifacts:
          path: coverage-report
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "clang-static-analyzer-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh clang-tools
      - restore_cache:
          key: cache
      - run:
          name: Run analyzer
          command: bash -c /root/project/scripts/clang-static-analyzer.sh
      - store_artifacts:
          path: scan-build
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "cppcheck-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh cppcheck
      - restore_cache:
          key: cache
      - run:
          name: Generate cppcheck error list
          command: cppcheck --errorlist > cppcheck-errors.xml
      - store_artifacts:
          path: cppcheck-errors.xml
      - run:
          name: Run cppcheck
          command: bash -c /root/project/scripts/cppcheck.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "sanitize-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh parallel
      - restore_cache:
          key: cache
      - run:
          name: Run sanitizer
          command: bash -c /root/project/scripts/sanitize.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "valgrind-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh parallel valgrind
      - restore_cache:
          key: cache
      - run:
          name: Run Valgrind Memcheck
          command: bash -c /root/project/scripts/valgrind.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "clang-tidy":
    docker:
      - image: johnmcfarlane/cnl_ci:clang-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh clang-tidy
      - restore_cache:
          key: cache
      - run:
          name: Run Clang-Tidy
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/scripts/clang-tidy.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "memory-sanitizer-clang":
    docker:
      - image: clangbuiltlinux/ubuntu
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh libc++-dev libc++abi-dev parallel
      - restore_cache:
          key: cache
      - run:
          name: Run memory sanitizer
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/scripts/memory-sanitizer.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "sanitize-clang":
    docker:
      - image: johnmcfarlane/cnl_ci:clang-9
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh parallel
      - restore_cache:
          key: cache
      - run:
          name: Run sanitizer
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/scripts/sanitize.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "shellcheck":
    docker:
      - image: johnmcfarlane/cnl_ci:base-19.10
    steps:
      - checkout
      - run:
          name: Install ShellCheck linter
          command: |
            apt update --yes --quiet
            apt upgrade --yes --quiet
            apt install --yes --quiet shellcheck
      - run:
          name: Run ShellCheck
          command: /root/project/scripts/shellcheck.sh

workflows:
  version: 2
  test:
    jobs:
      - "memory-sanitizer-clang"
