version: 2

general:
  branches:
    ignore:
      - gh-pages

jobs:
  "coverage-gcc":
    docker:
      - image: ubuntu:19.10
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh
      - restore_cache:
          key: cache
      - run:
          name: Run coverage
          command: bash -c /root/project/linux/coverage.sh
      - store_artifacts:
          path: coverage-report
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "clang-static-analyzer-gcc":
    docker:
      - image: gcc:latest
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh && apt install --yes --quiet clang-tools
      - restore_cache:
          key: cache
      - run:
          name: Run analyzer
          command: bash -c /root/project/linux/clang-static-analyzer.sh
      - store_artifacts:
          path: scan-build
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "clang-tidy-gcc":
    docker:
      - image: gcc:latest
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh && apt install --yes --quiet clang-tidy
      - restore_cache:
          key: cache
      - run:
          name: Run Clang-Tidy
          command: bash -c /root/project/linux/clang-tidy.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "sanitize-gcc":
    docker:
      - image: gcc:latest
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh
      - restore_cache:
          key: cache
      - run:
          name: Run sanitizer
          command: bash -c /root/project/linux/sanitize.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "analyze-clang":
    docker:
      - image: clangbuiltlinux/ubuntu
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh && apt install --yes --quiet clang-tools
      - restore_cache:
          key: cache
      - run:
          name: Run analyzer
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/linux/analyze.sh
      - store_artifacts:
          path: scan-build
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "clang-tidy-clang":
    docker:
      - image: clangbuiltlinux/ubuntu
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh && apt install --yes --quiet clang-tidy
      - restore_cache:
          key: cache
      - run:
          name: Run Clang-Tidy
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/linux/clang-tidy.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

  "sanitize-clang":
    docker:
      - image: clangbuiltlinux/ubuntu
    steps:
      - checkout
      - run:
          name: Set up system
          command: /root/project/.circleci/setup.sh
      - restore_cache:
          key: cache
      - run:
          name: Run sanitizer
          command: CXX=/usr/bin/clang++-9 CC=/usr/bin/clang-9 /root/project/linux/sanitize.sh
      - save_cache:
          key: cache
          paths:
            - ~/.ccache
            - ~/.conan/data

workflows:
  version: 2
  test:
    jobs:
      - "coverage-gcc"
      - "clang-static-analyzer-gcc"
      - "clang-tidy-gcc"
      - "sanitize-gcc"
      - "analyze-clang"
      - "clang-tidy-clang"
      - "sanitize-clang"
